{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/emailcheck.service.ts","./src/app/emailtest/emailtest.component.css","./src/app/emailtest/emailtest.component.html","./src/app/emailtest/emailtest.component.ts","./src/app/everify-list/everify-list.component.css","./src/app/everify-list/everify-list.component.html","./src/app/everify-list/everify-list.component.ts","./src/app/everify/everify.component.css","./src/app/everify/everify.component.html","./src/app/everify/everify.component.ts","./src/app/verified-list/verified-list.component.css","./src/app/verified-list/verified-list.component.html","./src/app/verified-list/verified-list.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;ACVA,wBAAwB,gCAAgC,yBAAyB,cAAc,cAAc,6BAA6B,kBAAkB,oBAAoB,yBAAyB,KAAK,C;;;;;;;ACA9M,0Y;;;;;;;;;;;;;;;;;;;;;ACA0C;AACmC;AAEpB;AAOzD;IAGE,sBAAmB,EAAuB,EAAU,QAA0B;QAA3D,OAAE,GAAF,EAAE,CAAqB;QAAU,aAAQ,GAAR,QAAQ,CAAkB;IAC9E,CAAC;IAED,+BAAQ,GAAR;IACA,CAAC;IAPU,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAIuB,kFAAmB,EAAmB,8EAAiB;OAHnE,YAAY,CAQxB;IAAD,mBAAC;CAAA;AARwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACViC;AACjB;AACI;AACY;AACR;AACiB;AAEvB;AACyB;AACb;AAEG;AACX;AACgB;AACc;AACG;AACX;AAErE,IAAM,SAAS,GAAW;IACpB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,sGAAqB,EAAE;IAC9C,EAAE,IAAI,EAAE,QAAQ,EAAO,SAAS,EAAE,sGAAqB,EAAE;CAC9D,CAAC;AAEF;;KAEK;AAwBL;IAAA;IAAyB,CAAC;IAAb,SAAS;QApBrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,qEAAY;gBACZ,qFAAgB;gBAChB,mGAAoB;gBACpB,sGAAqB;gBACrB,2FAAkB;aACnB;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,8EAAgB;gBACd,iEAAU;gBACZ,mEAAW;gBACX,uEAAiB,CAAC,aAAa,CAAC,8EAAW,CAAC,QAAQ,CAAC;gBACrD,wFAAyB;gBACzB,qEAAY,CAAC,OAAO,CAAC,SAAS,CAAC;aAChC;YACD,SAAS,EAAE,CAAC,8EAAiB,CAAC;YAC9B,SAAS,EAAE,CAAC,qEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;ACjDqB;AACoB;AACR;AACvD,4HAA4H;AAG5H;IAcM,2BAAoB,IAAe,sCAAqC;QAElE,wEAAwE;QAF1D,SAAI,GAAJ,IAAI,CAAW,sCAAqC;QAVhE,QAAG,GAAG,sCAAsC,CAAC;QAErD,8DAA8D;QAEtD,aAAQ,GAAG,IAAI,6EAAe,CAAC,KAAK,CAAC,CAAC;QAC9C,mBAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;QAEtC,eAAU,GAAG,IAAI,6EAAe,CAAC,EAAE,CAAC,CAAC;QAC7C,qBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;IAMlD,CAAC;IAED,uCAAW,GAAX,UAAY,KAAK,EAAE,GAAG;QAChB,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,QAAQ;QACrC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QAClB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAC,KAAK,EAAE,EAAC,OAAO,EAAE,IAAI,yEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,EAAC,CAAC,CAAC;IAC1G,CAAC;IAED,yCAAa,GAAb,UAAc,QAAiB;QACzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;IAED,uCAAW,GAAX,UAAY,KAAa;QACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IAhCM,iBAAiB;QAD7B,yEAAU,EAAE;yCAekB,wEAAU,sCAAqC;OAdjE,iBAAiB,CAsC7B;IAAD,wBAAC;CAAA;AAtC6B;;;;;;;;ACN9B,mB;;;;;;;ACAA,oK;;;;;;;;;;;;;;;;;;;;;ACAkD;AAC2B;AAEnB;AAO1D;IAQA,4BAAmB,EAAuB,EAAU,QAA0B;QAA9E,iBAGC;QAHkB,OAAE,GAAF,EAAE,CAAqB;QAAU,aAAQ,GAAR,QAAQ,CAAkB;QAN9E,cAAS,GAAG,EAAE,CAAC;QAEf,cAAS,GAAW,KAAK,CAAC;QAKpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,CAAC;QAC7C,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,SAAS,GAAG,GAAG,EAApB,CAAoB,CAAC,CAAC;IAC1E,CAAC;IAED,qCAAQ,GAAR;QACM,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QACzD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IAC1B,CAAC;IAhBY,kBAAkB;QAL9B,wEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCASqB,kFAAmB,EAAmB,8EAAiB;OARjE,kBAAkB,CAkB9B;IAAD,yBAAC;CAAA;AAlB8B;;;;;;;;ACV/B,mB;;;;;;;ACAA,4LAA4L,YAAY,qiBAAqiB,mDAAmD,GAAG,uCAAuC,mBAAmB,uCAAuC,oBAAoB,+DAA+D,uBAAuB,uCAAuC,sBAAsB,kDAAkD,+BAA+B,KAAK,gCAAgC,2F;;;;;;;;;;;;;;;;;;;;;ACA/mC;AAC2B;AAEnB;AAO1D;IAOA,8BAAmB,EAAuB,EAAU,QAA0B;QAA9E,iBAKC;QALkB,OAAE,GAAF,EAAE,CAAqB;QAAU,aAAQ,GAAR,QAAQ,CAAkB;QAL9E,cAAS,GAAG,EAAE,CAAC;QAOT,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,UAAU,GAAG,GAAG,EAArB,CAAqB,CAAC,CAAC;QACvE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,YAAY,EAAE,CAAC;QACrD,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC;IACvC,CAAC;IAEC,uCAAQ,GAAR;IAEA,CAAC;IAhBU,oBAAoB;QALhC,wEAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAQqB,kFAAmB,EAAmB,8EAAiB;OAPjE,oBAAoB,CAkBhC;IAAD,2BAAC;CAAA;AAlBgC;;;;;;;;ACVjC,mB;;;;;;;ACAA,szFAAszF,gLAAgL,cAAc,GAAG,mBAAmB,2FAA2F,kf;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3iG;AACmB;AAChC;AACW;AACE;AAErB;AACH;AAQlC;IAyBM,0BAAmB,EAAuB,EAAU,QAA0B;QAA3D,OAAE,GAAF,EAAE,CAAqB;QAAU,aAAQ,GAAR,QAAQ,CAAkB;QAvB9E,UAAK,GAAG,oBAAoB,CAAC;QAC7B,gBAAW,GAAG,wBAAwB,CAAC;QACvC,cAAS,GAAW,EAAE,CAAC;QACvB,cAAS,GAAG,EAAE,CAAC;QACf,YAAO,GAAG,EAAE,CAAC;QACb,eAAU,GAAG,EAAE,CAAC;QAIhB,aAAQ,GAAW,IAAI,CAAC;QACxB,UAAK,GAAG,IAAI,CAAC;QAEb,aAAQ,GAAC,IAAI,CAAC;QACd,cAAS,GAAG,KAAK,CAAC;QACX,YAAO,GAAY,CAAC,CAAC;QAE5B,YAAO,GAAG,IAAI,CAAC;QACf,UAAK,GAAG,CAAC,CAAC;QACV,cAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACvB,gBAAW,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;IAIuC,CAAC;IAElF,mCAAQ,GAAR;QACM,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QACzD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IAC1B,CAAC;IAED,mCAAQ,GAAR;QACM,mBAAmB;QACnB,qBAAqB;IAC3B,CAAC;IAED,uCAAY,GAAZ;QAAA,iBAIC;QAHK,WAAW,CAAE;YACP,KAAI,CAAC,KAAK,IAAI,CAAC;QACrB,CAAC,EAAE,CAAC,CAAC,CAAC;IACZ,CAAC;IAED,0CAAe,GAAf,UAAgB,KAAe;QAA/B,iBAYC;QAXK,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,EAAE,EAAC,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC5B,IAAI,IAAI,GAAU,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAE9B,IAAI,QAAM,GAAe,IAAI,UAAU,EAAE,CAAC;YAC1C,QAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACxB,QAAM,CAAC,MAAM,GAAG,UAAC,CAAC;gBACf,KAAI,CAAC,YAAY,GAAG,QAAM,CAAC,MAAM,CAAC;gBAClC,mCAAmC;YACtC,CAAC;QACJ,CAAC;IACT,CAAC;IAGO,oCAAS,GAAjB;QAEM,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAElC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAI1C,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACtD,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,UAAS,CAAC,IAAG,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAC,EAAE,CAAC,GAAC,CAAC,CAAC;QACxF,IAAI,OAAO,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,KAAK,GAAG,EAAE,CAAC;QAEf,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC1C,IAAI,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACzC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC;QAED,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAErB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,EAAC,MAAM,EAAC;gBACjC,IAAI,EAAC,IAAI,CAAC,SAAS;gBACnB,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM;aACjC,EAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,SAAS,EAAE,CAAC;IACvB,CAAC;IAGD,oCAAS,GAAT;QAAA,iBA4CC;QA3CK,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;QACf,IAAI,OAAO,GAAG,mEAAU,CAAC,KAAK,CAAC,CAAC,EAAC,IAAI,CAAC;QACtC,IAAI,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,cAAM,YAAI,CAAC,KAAK,EAAV,CAAU,CAAC;aAC5C,SAAS,CAAC;YAEL;;;;;;iBAMK;YACL,qBAAqB;YACrB,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,OAAO,CAAC,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;gBAC1E,KAAI,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,GAAC,KAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;gBACtD,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC1B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBAEpB,oBAAoB;YAC1B,CAAC,EACD,aAAG;gBACG,OAAO,CAAC,GAAG,CAAC,KAAK,EAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBAC9B,KAAI,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,OAAO,GAAC,CAAC,CAAC,CAAC,CAAC;gBAC9D,GAAG,CAAC,WAAW,EAAE,CAAC;gBAClB,KAAI,CAAC,KAAK,EAAE,CAAC;YAEnB,CAAC,CAAC;gBACF;oBACM,mBAAmB;gBACzB,CAAC;YAED,KAAI,CAAC,OAAO,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM;YAEvC,EAAE,EAAC,KAAI,CAAC,OAAO,IAAE,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAC;gBAChC,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YAC5B,CAAC;QACP,CAAC,EACD;QAEA,CAAC,CACA,CAAC;IACR,CAAC;IAED,iCAAM,GAAN,UAAO,KAAK;QACN,OAAO,CAAC,GAAG,CAAC,KAAK,EAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAEhC,kBAAkB;IACvB,CAAC;IAED,sCAAW,GAAX;QACM,6CAA6C;QAC7C,6BAA6B;QAC7B,IAAI,sEAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,GAAC,WAAW,EAAE,EAAE,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;IAC7G,CAAC;IAEO,sCAAW,GAAnB,UAAqB,KAAU;QAC/B,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACxC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAI,KAAK,CAAC,MAAM,WAAM,KAAK,CAAC,UAAY,CAAC,CAAC,CAAC,cAAc,CAAC;QAClE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC5B,MAAM,CAAC,MAAM,CAAC;IACpB,CAAC;IAED,4CAAiB,GAAjB,UAAkB,KAAK;QACjB,IAAI,CAAC,CAAC;QACN,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAE,iDAAiD;QACtE,MAAM,EAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACrG,CAAC;IAED,oCAAS,GAAT,UAAU,KAAK;QACT,EAAE,EAAC,KAAK,IAAE,EAAE,CAAC,EAAC;YACR,IAAI,CAAC,QAAQ,GAAG,KAAK;QAC3B,CAAC;QAAA,IAAI,EAAC;YACA,IAAI,CAAC,QAAQ,GAAG,IAAI;QAC1B,CAAC;IACP,CAAC;IAED,gCAAK,GAAL;QACM,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,EAAC;YACX,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;YACjC,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;YACzB,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAC3B,CAAC;IACP,CAAC;IAED,mCAAQ,GAAR;QAAA,iBASC;QAPK,UAAU,CAAC;YACL,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;YACvB,KAAI,CAAC,SAAS,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC;YACjC,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,KAAI,CAAC,SAAS,EAAE,CAAC;QACvB,CAAC,EAAC,KAAK,CAAC;QACR,EAAE;IACR,CAAC;IAxLM,gBAAgB;QAL5B,wEAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCA0B2B,kFAAmB,EAAmB,8EAAiB;OAzBvE,gBAAgB,CA0L5B;IAAD,uBAAC;CAAA;AA1L4B;;;;;;;;ACf7B,2BAA2B,8BAA8B,cAAc,eAAe,8BAA8B,6CAA6C,C;;;;;;;ACAjK,0tBAA0tB,yBAAyB,GAAG,2CAA2C,SAAS,oPAAoP,WAAW,waAAwa,iBAAiB,KAAK,WAAW,6lBAA6lB,mDAAmD,GAAG,uCAAuC,mBAAmB,uCAAuC,oBAAoB,+DAA+D,uBAAuB,yDAAyD,sBAAsB,kDAAkD,+BAA+B,KAAK,gCAAgC,yG;;;;;;;;;;;;;;;;;;;;;;;ACAn+E;AACU;AACF;AACF;AAOxD;IAeE,+BAAmB,EAAuB,EAAU,QAA0B;QAA9E,iBAWC;QAXkB,OAAE,GAAF,EAAE,CAAqB;QAAU,aAAQ,GAAR,QAAQ,CAAkB;QAb9E,cAAS,GAAG,EAAE,CAAC;QACf,UAAK,GAAE,EAAE,CAAC;QAEV,cAAS,GAAG,KAAK,CAAC;QAGlB,cAAS,GAAC,KAAK,CAAC;QAEhB,cAAS,GAAC,EAAE,CAAC;QAGb,YAAO,GAAC,EAAE,CAAC;QAGP,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC;aACzB,YAAY,EAAE;aACd,SAAS,CAAC,cAAI;YACX,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAExB,GAAG,EAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;gBACzC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC;gBACjD,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;YACnD,CAAC;QACJ,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+CAAe,GAAf,UAAgB,KAAK;QAArB,iBAiBC;QAhBG,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACvC,IAAI,CAAC,SAAS,GAAG,IAAI;QACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAGnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;QAEvB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;aAC3B,YAAY,EAAE;aACd,SAAS,CAAC,cAAI;YACT,mBAAmB;YACnB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;YAC7B,KAAI,CAAC,UAAU,GAAG,IAAI;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2CAAW,GAAX;QACI,6CAA6C;QAC7C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QAE5B,GAAG,EAAC,IAAI,CAAC,GAAE,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;YACvC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACnD,CAAC;QACD,IAAI,OAAO,GAAG;YACR,OAAO,EAAE,CAAC,UAAU,EAAE,cAAc,EAAE,WAAW,EAAE,UAAU,EAAE,oBAAoB,CAAC;SACzF,CAAC;QACF,IAAI,sEAAW,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,GAAC,WAAW,EAAE,OAAO,CAAC,CAAC;IAC3E,CAAC;IAEC,wCAAQ,GAAR;IAEA,CAAC;IA9DU,qBAAqB;QALjC,wEAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAgBuB,kFAAmB,EAAmB,8EAAiB;OAfnE,qBAAqB,CAgEjC;IAAD,4BAAC;CAAA;AAhEiC;;;;;;;;;ACVlC;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAE;QACN,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,mCAAmC;QAC/C,WAAW,EAAE,0CAA0C;QACvD,SAAS,EAAE,mBAAmB;QAC9B,aAAa,EAAE,+BAA+B;QAC9C,iBAAiB,EAAE,cAAc;KACpC;CACF,CAAC;;;;;;;;;;;;;;ACf6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \".link{\\r\\n      text-decoration: none;\\r\\n      color: #3991e3;\\r\\n     \\r\\n}\\r\\n.ctagroup{\\r\\n      position: absolute;\\r\\n      top: 2%;\\r\\n      right: 2%;\\r\\n      color: #3991e3;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"ctagroup\\\">\\r\\n      <a href=\\\"\\\" class=\\\"link\\\">Home</a>\\r\\n      <a href=\\\"verify\\\" class=\\\"link\\\">Verify</a>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container-fluid\\\">   \\r\\n      <router-outlet></router-outlet> \\r\\n</div>\\r\\n  \\r\\n<!-- <br>\\r\\n<br>\\r\\n<br>\\r\\n<app-everify-list *ngIf=\\\"showElist\\\"></app-everify-list> \\r\\nnpm install rxjs@6 rxjs-compat@6 --save\\r\\n-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { EmailcheckService } from './emailcheck.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent { \r\n  \r\n\r\n  constructor(public db: AngularFireDatabase, private eservice:EmailcheckService) { \r\n  }\r\n\r\n  onSubmit() { \r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { EmailcheckService } from './emailcheck.service';\r\nimport { AngularFireModule } from 'angularfire2';\r\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\r\n\r\nimport { HttpModule } from '@angular/http';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { environment } from '../environments/environment';\r\nimport { AppComponent } from './app.component';\r\nimport { EverifyComponent } from './everify/everify.component';\r\nimport { EverifyListComponent } from './everify-list/everify-list.component';\r\nimport { VerifiedListComponent } from './verified-list/verified-list.component';\r\nimport { EmailtestComponent } from './emailtest/emailtest.component';\r\n\r\nconst appRoutes: Routes = [\r\n      { path: '', component: VerifiedListComponent },\r\n      { path: 'verify',      component: VerifiedListComponent } \r\n];\r\n\r\n/* const appRoutes: Routes = [\r\n      { path: '', component: VerifiedListComponent }\r\n]; */\r\n    \r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    EverifyComponent,\r\n    EverifyListComponent,\r\n    VerifiedListComponent,\r\n    EmailtestComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n      HttpModule,\r\n    FormsModule,\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFireDatabaseModule, // for database\r\n    RouterModule.forRoot(appRoutes) \r\n  ],\r\n  providers: [EmailcheckService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\n//import { AngularFireDatabase, FirebaseListObservable, FirebaseObjectObservable } from 'angularfire2/database-deprecated'; \r\n\r\n@Injectable()\r\nexport class EmailcheckService {\r\n\r\n      clients;\r\n\r\n      private api = 'https://app.verify-email.org/api/v1/';\r\n\r\n      //jjZodIbEGuz4Mk88b8WLLdntzCflkWx2qZ88WMUMNiC9g9C8zr  /verify/\r\n\r\n      private showList = new BehaviorSubject(false);\r\n      showListStatus = this.showList.asObservable();\r\n\r\n      private inputValue = new BehaviorSubject('');\r\n      inputValueChange = this.inputValue.asObservable();\r\n\r\n      constructor(private http:HttpClient/* ,public db: AngularFireDatabase */) { \r\n\r\n            //this.clients = this.db.list('/Data') as FirebaseListObservable<any[]>;\r\n    \r\n      }\r\n    \r\n      verifyEmail(email, api){\r\n            let key = this.api + api + /verify/ \r\n          console.log(email)\r\n          return this.http.get(key+email, {headers: new HttpHeaders().set('Content-Type', 'application/json')});\r\n      }\r\n\r\n      changeMessage(showhide: boolean) {\r\n            this.showList.next(showhide);\r\n      }\r\n\r\n      changeValue(value: string) {\r\n            this.inputValue.next(value);\r\n      }\r\n\r\n      /* getClients(){\r\n            return this.clients;\r\n      } */\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/emailcheck.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/emailtest/emailtest.component.css\n// module id = ./src/app/emailtest/emailtest.component.css\n// module chunks = main","module.exports = \"\\r\\n\\r\\n   \\r\\n<app-everify></app-everify> \\r\\n\\r\\n\\r\\n<br>\\r\\n<br>\\r\\n<br>\\r\\n<!-- <app-everify-list *ngIf=\\\"showElist\\\"></app-everify-list> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/emailtest/emailtest.component.html\n// module id = ./src/app/emailtest/emailtest.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\r\nimport { Observable } from 'rxjs/Observable'; \r\nimport { EmailcheckService } from '../emailcheck.service';\r\n\r\n@Component({\r\n  selector: 'app-emailtest',\r\n  templateUrl: './emailtest.component.html',\r\n  styleUrls: ['./emailtest.component.css']\r\n})\r\nexport class EmailtestComponent {\r\n\r\nitemValue = '';\r\nitems: Observable<any[]>;\r\nshowElist:boolean = false;\r\n\r\n\r\n\r\nconstructor(public db: AngularFireDatabase, private eservice:EmailcheckService) {\r\n      this.items = db.list('items').valueChanges(); \r\n      this.eservice.showListStatus.subscribe(res => this.showElist = res);\r\n}\r\n\r\nonSubmit() {\r\n      this.db.list('/items').push({ content: this.itemValue });\r\n      this.itemValue = '';\r\n}\r\n\r\n} \n\n\n// WEBPACK FOOTER //\n// ./src/app/emailtest/emailtest.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/everify-list/everify-list.component.css\n// module id = ./src/app/everify-list/everify-list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n      <!-- <h2>Content from Firebase</h2>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n            <pre *ngFor=\\\"let item of items | async\\\">{{item.email}}</pre>\\r\\n      </div>  -->\\r\\n\\r\\n      <table class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n                  <tr>\\r\\n                        <th width=\\\"2%\\\">No.</th>\\r\\n                        <th>Email Id</th>\\r\\n                        <th>status value</th> \\r\\n                        <th>smtp_code</th> \\r\\n                        <th>smtp_log</th> \\r\\n                        <th>Status</th> \\r\\n                  </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                  <tr *ngFor=\\\"let value of items | async; let i = index\\\">\\r\\n                        <td>{{i}}</td>\\r\\n                        <td>{{value.email.email}}</td>\\r\\n                        <td>{{value.email.status}}</td>                        \\r\\n                        <td>{{value.email.smtp_code}}</td>\\r\\n                        <td>{{value.email.smtp_log}}</td>\\r\\n                        <td [ngClass]=\\\"{'active':value.email.status==1}\\\">{{value.email.status_description}}</td>\\r\\n                  </tr> \\r\\n            </tbody>\\r\\n      </table> \\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/everify-list/everify-list.component.html\n// module id = ./src/app/everify-list/everify-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { EmailcheckService } from '../emailcheck.service';\r\n\r\n@Component({\r\n  selector: 'app-everify-list',\r\n  templateUrl: './everify-list.component.html',\r\n  styleUrls: ['./everify-list.component.css']\r\n})\r\nexport class EverifyListComponent implements OnInit {\r\n\r\nitemValue = '';\r\nitems: Observable<any[]>;\r\n\r\ninputValue:string\r\n\r\nconstructor(public db: AngularFireDatabase, private eservice:EmailcheckService) {\r\n\r\n      this.eservice.inputValueChange.subscribe(res => this.inputValue = res);\r\n      this.items = db.list(this.inputValue).valueChanges(); \r\n      console.log('aaaaaa', this.items)\r\n}\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/everify-list/everify-list.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/everify/everify.component.css\n// module id = ./src/app/everify/everify.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n\\t<div class=\\\"jumbotron jumbotron-fluid\\\">\\r\\n            <div class=\\\"container\\\">\\r\\n                  <h1 class=\\\"display-4\\\">Email Verification</h1>\\r\\n                  <p class=\\\"lead\\\">Add .CSV URL and Verifiy </p>\\r\\n\\r\\n                  <div class=\\\"input-group mb-3\\\">  \\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"API KEY\\\" \\r\\n                        [(ngModel)]=\\\"apikey\\\"\\r\\n                        >  \\r\\n                  </div>\\r\\n            </div>\\r\\n      </div>\\r\\n\\r\\n     \\r\\n\\r\\n      <div class=\\\"row text-center\\\">\\r\\n            <div class=\\\"col-md-3 col-xs-12\\\">\\r\\n                  <div class=\\\"input-group mb-3\\\">  \\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Email List Name\\\" \\r\\n                        (input)=\\\"checkText($event.target.value)\\\" \\r\\n                        (keypress)=\\\"omit_special_char($event)\\\"\\r\\n                        (keydown.space)=\\\"$event.preventDefault()\\\" \\r\\n                        [(ngModel)]=\\\"textValue\\\"\\r\\n                        >  \\r\\n                  </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 col-xs-12\\\">  \\r\\n                  <div class=\\\"input-group mb-3\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                              <span class=\\\"input-group-text\\\">Upload</span>\\r\\n                        </div>\\r\\n                        <div class=\\\"custom-file\\\">\\r\\n                              <input type=\\\"file\\\" class=\\\"custom-file-input\\\" id=\\\"inputGroupFile01\\\" (change)=\\\"handleFileInput($event.target.files)\\\">\\r\\n                              <label class=\\\"custom-file-label\\\" for=\\\"inputGroupFile01\\\">Choose file</label>\\r\\n                        </div>\\r\\n                  </div>\\r\\n                   \\r\\n            </div> \\r\\n\\r\\n            <div class=\\\"col-md-1 col-sm\\\">\\r\\n                  <button class=\\\"btn btn1 btn2\\\" (click)=\\\"checkData()\\\" [disabled]=\\\"fetchCta\\\">\\r\\n                        Fetch Data\\r\\n                  </button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1 col-sm\\\">\\r\\n                  <button class=\\\"btn btn1 btn2 btn-success\\\" (click)=\\\"jsonToExcel()\\\" [disabled]=\\\"loadData\\\">\\r\\n                        Export Result\\r\\n                  </button>\\r\\n            </div>\\r\\n\\r\\n            <!-- <div class=\\\"col-md-1\\\">\\r\\n                  <button class=\\\"btn btn1 btn2 btn-success\\\" (click)=\\\"pause()\\\" *ngIf=\\\"!playpause\\\">\\r\\n                       Pause\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn1 btn2 btn-success\\\" (click)=\\\"pause()\\\" *ngIf=\\\"playpause\\\">\\r\\n                        Play\\r\\n                   </button>\\r\\n            </div> -->\\r\\n\\r\\n            <!-- <a href=\\\"javascript:;\\\" (click)=\\\"test()\\\">unsubscribe</a> -->\\r\\n      </div> \\r\\n\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                  Total Email Verified: {{this.counter}}/{{this.overalllengh}} \\r\\n            </div>\\r\\n      </div>\\r\\n      \\r\\n \\r\\n\\t<!-- <div style=\\\"width: 300px;\\\">\\r\\n\\t\\t<form (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"item\\\">Item</label> <input type=\\\"text\\\"\\r\\n\\t\\t\\t\\t\\tclass=\\\"form-control\\\" placeholder=\\\"Enter content...\\\" id=\\\"item\\\"\\r\\n\\t\\t\\t\\t\\trequired [(ngModel)]=\\\"itemValue\\\" name=\\\"item\\\">\\r\\n\\t\\t\\t</div>\\r\\n \\r\\n\\t\\t\\t<div class=\\\"btn-group\\\">\\r\\n\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</form>\\r\\n\\t</div> -->\\r\\n \\r\\n\\t\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/everify/everify.component.html\n// module id = ./src/app/everify/everify.component.html\n// module chunks = main","import { Component, OnInit, Output } from '@angular/core';\r\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Angular2Csv } from 'angular2-csv/Angular2-csv'; \r\nimport { EmailcheckService } from '../emailcheck.service';\r\nimport { EventEmitter } from 'events'; \r\nimport 'rxjs/add/operator/takeWhile';\r\nimport 'rxjs/add/observable/timer'\r\nimport { Data } from './data';\r\n\r\n@Component({\r\n  selector: 'app-everify',\r\n  templateUrl: './everify.component.html',\r\n  styleUrls: ['./everify.component.css']\r\n})\r\nexport class EverifyComponent implements OnInit {\r\n\r\n      title = 'JavaSampleApproach';\r\n      description = 'Angular5-Firebase Demo';\r\n      textValue: string = \"\";\r\n      itemValue = '';\r\n      csvData = [];\r\n      csvDataAll = [];\r\n      items: Observable<any[]>;\r\n      uploadedData:string;\r\n      emailListName:string;\r\n      fetchCta:boolean = true;\r\n      alive = true;\r\n      wholeDate:any; \r\n      loadData=true;\r\n      playpause = false;\r\n      public counter : number = 0;\r\n      josnn;\r\n      oneTime = true;\r\n      timer = 1;\r\n      startTime = Date.now();\r\n      elapsedTime = Date.now() - this.startTime;\r\n      overalllengh;\r\n      apikey;\r\n\r\n      constructor(public db: AngularFireDatabase, private eservice:EmailcheckService) {}\r\n\r\n      onSubmit() {\r\n            this.db.list('/items').push({ content: this.itemValue });\r\n            this.itemValue = '';\r\n      }\r\n\r\n      ngOnInit() {\r\n            //this.observer1();\r\n            //this.timefunction()\r\n      }\r\n\r\n      timefunction(){\r\n            setInterval( ()=>  {\r\n                  this.timer += 1 \r\n            }, 1);\r\n      }\r\n\r\n      handleFileInput(files: FileList) { \r\n            console.log(files);\r\n            if(files && files.length > 0) {\r\n               let file : File = files.item(0);  \r\n      \r\n                 let reader: FileReader = new FileReader();\r\n                 reader.readAsText(file);\r\n                 reader.onload = (e) => {\r\n                    this.uploadedData = reader.result;\r\n                    //console.log(this.uploadedData);  \r\n                 }\r\n              }\r\n      }\r\n\r\n\r\n      private checkData() {\r\n\r\n            this.eservice.changeMessage(true);\r\n\r\n            this.eservice.changeValue(this.textValue);\r\n\r\n             \r\n\r\n            let allTextLines = this.uploadedData.split(/\\r\\n|\\n/); \r\n            allTextLines = allTextLines.filter(function(e){ return e.replace(/(\\r\\n|\\n|\\r)/gm,\"\")}); \r\n            let headers = allTextLines[0].split(','); \r\n            let lines = [];\r\n            \r\n            for ( let i = 0; i < allTextLines.length; i++) {\r\n                  let data = allTextLines[i].split(',')[1];  \r\n                  lines.push(data);  \r\n            }\r\n\r\n            this.csvData = lines;\r\n            \r\n            this.db.list('/dropdown').push({detail:{\r\n                  'dd':this.textValue,\r\n                  'total': this.csvData.length\r\n            }});  \r\n\r\n            this.observer1();\r\n      }\r\n\r\n\r\n      observer1(){\r\n            console.log(11)\r\n            var numbers = Observable.timer(0,1200)\r\n            var sub = numbers.takeWhile(() => this.alive) \r\n            .subscribe(() => {\r\n\r\n                  /* console.log('fire---'+this.counter) \r\n                  this.counter += 1; \r\n                  if(this.counter==5 || this.counter==10 || this.counter==15 || this.counter==20){ \r\n                        this.alive = false; \r\n                        this.pause();\r\n                        sub.unsubscribe();\r\n                  }  */\r\n                  //this.alive = false;\r\n                  this.eservice.verifyEmail(this.csvData[this.counter], this.apikey).subscribe(res => {\r\n                        this.db.list('/'+this.textValue).push({ email: res }); \r\n                        this.csvDataAll.push(res);  \r\n                        this.oneTime = true; \r\n                        \r\n                        //this.alive = true;\r\n                  },\r\n                  err =>{\r\n                        console.log('log',err.status);\r\n                        this.db.list('/errorList').push(this.csvData[this.counter-1]); \r\n                        sub.unsubscribe();\r\n                        this.pause();\r\n                        \r\n                  }),\r\n                  ()=>{\r\n                        //sub.unsubscribe()\r\n                  }\r\n\r\n                  this.counter += 1;\r\n                  this.overalllengh = this.csvData.length\r\n                  \r\n                  if(this.counter==this.csvData.length){\r\n                        this.alive = false;\r\n                        this.loadData = false;\r\n                  }\r\n            },\r\n            ()=> { \r\n                               \r\n            }\r\n            ); \r\n      }\r\n\r\n      verify(value){\r\n            console.log('aaa',value.email);\r\n\r\n           // if(value.email)\r\n      }\r\n      \r\n      jsonToExcel(){\r\n            //this.wholeDate = this.eservice.getClients()\r\n            //console.log(this.wholeDate)\r\n            new Angular2Csv(this.csvDataAll, this.textValue+'_verified', { headers: Object.keys(this.csvData[0])});\r\n      }\r\n      \r\n      private handleError (error: any) { \r\n      let errMsg = (error.message) ? error.message :\r\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n                  console.error(errMsg);  \r\n            return errMsg;\r\n      }\r\n\r\n      omit_special_char(event){   \r\n            var k;  \r\n            k = event.charCode;  //         k = event.keyCode;  (Both can be used)\r\n            return((k > 64 && k < 91) || (k > 96 && k < 123) || k == 8 || k == 32 || (k >= 48 && k <= 57)); \r\n      }\r\n\r\n      checkText(value){\r\n            if(value!=\"\"){\r\n                  this.fetchCta = false\r\n            }else{\r\n                  this.fetchCta = true  \r\n            }\r\n      }\r\n\r\n      pause(){\r\n            if(this.oneTime){\r\n                  this.playpause = !this.playpause;\r\n                  this.alive = !this.alive;\r\n                  this.tmedelay(); \r\n                  this.oneTime = false;\r\n            }\r\n      } \r\n\r\n      tmedelay(){\r\n            \r\n            setTimeout(() =>{\r\n                  console.log('timedaly')\r\n                  this.playpause = !this.playpause;\r\n                  this.alive = true;\r\n                  this.observer1(); \r\n            },60000)\r\n            //\r\n      } \r\n\r\n} \r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/everify/everify.component.ts","module.exports = \".logtext{\\r\\n      font-size: 10px\\r\\n}\\r\\ntd.active{\\r\\n      \\r\\n}\\r\\n.table-bordered td.active{\\r\\n      background: #e76761 !important\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/verified-list/verified-list.component.css\n// module id = ./src/app/verified-list/verified-list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n\\t<div class=\\\"jumbotron jumbotron-fluid\\\">\\r\\n            <div class=\\\"container\\\">\\r\\n                  <h1 class=\\\"display-4\\\">Verify All Emails</h1>\\r\\n                  <p class=\\\"lead\\\">Check previously verified Emails</p>\\r\\n            </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row mb-5\\\">\\r\\n            <div class=\\\"col-lg-3 col-xs-12\\\">\\r\\n                  <div class=\\\"form-group mb-2\\\"> \\r\\n\\r\\n                        <select (change)=\\\"filterForeCasts($event.target.value)\\\" class=\\\"form-control\\\">\\r\\n                              <option value=\\\"0\\\">--Verified List--</option>\\r\\n                              <option *ngFor=\\\"let summary of summaries; let i = index\\\" value={{i}}>\\r\\n                                    {{summary}}\\r\\n                              </option>\\r\\n                        </select>\\r\\n                  </div> \\r\\n            </div>\\r\\n            <div class=\\\"col-lg-2 col-xs-12\\\" *ngIf=\\\"showCount\\\">\\r\\n                  Total Email List : {{countShow}}\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-2 col-xs-12\\\">\\r\\n                  <button class=\\\"btn btn1 btn2 btn-success\\\" (click)=\\\"jsonToExcel()\\\" [disabled]=\\\"loadData\\\">\\r\\n                        Export Result\\r\\n                  </button>\\r\\n            </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-12\\\">\\r\\n                  Total Verified Email Items: {{this.totalList }} / {{countShow}}\\r\\n            </div>\\r\\n      </div>\\r\\n\\r\\n      \\r\\n\\r\\n      <!-- <table class=\\\"table table-bordered\\\" *ngIf=\\\"showTable\\\">\\r\\n            <thead>\\r\\n                  <tr>\\r\\n                        <th width=\\\"2%\\\">No.</th>\\r\\n                        <th>Email Id</th>\\r\\n                        <th>status value</th> \\r\\n                        <th>smtp_code</th> \\r\\n                        <th width=\\\"30%\\\">smtp_log</th> \\r\\n                        <th>Status</th> \\r\\n                  </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                  <tr *ngFor=\\\"let value of items; let i = index\\\">\\r\\n                        <td>{{i}}</td>\\r\\n                        <td>{{value.email.email}}</td>\\r\\n                        <td>{{value.email.status}}</td>                        \\r\\n                        <td>{{value.email.smtp_code}}</td>\\r\\n                        <td class=\\\"logtext\\\">{{value.email.smtp_log}}</td>\\r\\n                        <td [ngClass]=\\\"{'active':value.email.status!=1}\\\">{{value.email.status_description}}</td> \\r\\n                  </tr> \\r\\n            </tbody>\\r\\n      </table> --> \\r\\n\\r\\n</div> \\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/verified-list/verified-list.component.html\n// module id = ./src/app/verified-list/verified-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { AngularFireDatabase } from 'angularfire2/database';\r\nimport { EmailcheckService } from '../emailcheck.service';\r\nimport { Angular2Csv } from 'angular2-csv/Angular2-csv';\r\n\r\n@Component({\r\n  selector: 'app-verified-list',\r\n  templateUrl: './verified-list.component.html',\r\n  styleUrls: ['./verified-list.component.css']\r\n})\r\nexport class VerifiedListComponent implements OnInit {\r\n\r\n  summaries = [];\r\n  count =[];\r\n  countShow;\r\n  showCount = false;\r\n  selection;\r\n  items;\r\n  showTable=false;\r\n  csvDataAll;\r\n  finalList=[];\r\n  totalList;\r\n\r\n  alldata=[];\r\n\r\n  constructor(public db: AngularFireDatabase, private eservice:EmailcheckService) {  \r\n      this.db.list('/dropdown')\r\n     .valueChanges()\r\n     .subscribe(data=>{  \r\n         this.alldata.push(data);\r\n\r\n         for(let i=0; i<this.alldata[0].length; i++){ \r\n            this.summaries.push(this.alldata[0][i].detail.dd)\r\n            this.count.push(this.alldata[0][i].detail.total)\r\n         } \r\n      }); \r\n  }\r\n\r\n  filterForeCasts(value){ \r\n      this.showTable = false;\r\n      this.selection = this.summaries[value];\r\n      this.showCount = true\r\n      this.countShow = this.count[value];\r\n\r\n\r\n      console.log(this.count)\r\n\r\n      this.db.list(this.selection)\r\n      .valueChanges()\r\n      .subscribe(data=>{  \r\n            //console.log(data)\r\n            this.showTable = true;\r\n            this.totalList = data.length;\r\n            this.csvDataAll = data\r\n      }); \r\n  }\r\n\r\n  jsonToExcel(){\r\n      //this.wholeDate = this.eservice.getClients()\r\n      console.log(this.csvDataAll)\r\n\r\n      for(let i =0; i<this.csvDataAll.length; i++){\r\n            this.finalList.push(this.csvDataAll[i].email)\r\n      }\r\n      var options = {  \r\n            headers: ['Email Id', 'status value', 'smtp_code', 'smtp_log', 'status_description'] \r\n      };\r\n      new Angular2Csv(this.finalList, this.selection+'_verified', options);\r\n}\r\n\r\n  ngOnInit() {\r\n      \r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/verified-list/verified-list.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebase: {\r\n      apiKey: \"AIzaSyBjnY2PGr5B6bC7Vm4Thwp74S4P4XlCI8M\",\r\n      authDomain: \"emailverify-5838d.firebaseapp.com\",\r\n      databaseURL: \"https://emailverify-5838d.firebaseio.com\",\r\n      projectId: \"emailverify-5838d\",\r\n      storageBucket: \"emailverify-5838d.appspot.com\",\r\n      messagingSenderId: \"272150387950\"\r\n  }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}